#!/bin/sh
# Name: $RCSfile$
# CVS file: $Source$
# CVS id: $Header$
# Revision: $Revision$
# Revised on: $Date$
# Revised by: $Author$
# Support: Fernando Nunes - domusonline@domus.online.pt
# Licence: This script is licenced as GPL ( http://www.gnu.org/licenses/gpl.html )
# History:

usage()
{
	echo "$PROGNAME Usage:" >&2
	echo "$PROGNAME <existing INFORMIXDIR> <new virt INFORMIXDIR> <version> [ {DBSA GROUP} {AAO_GROUP} {DBSSO_GROUP} ]" >&2
}



PROGNAME=`basename $0`
VERSION=`echo "$Revision$" | cut -f2 -d' '`

case $# in
3)
	EXISTING_IXDIR=$1
	NEW_IXDIR=$2
	IX_VERSION=$3
	GROUPS_FLAG=0
	;;
6)
	EXISTING_IXDIR=$1
	NEW_IXDIR=$2
	IX_VERSION=$3
	DBSA_GROUP=$4
	grep "^${DBSA_GROUP}:" /etc/group 1>/dev/null 2>/dev/null
	if [ $? != 0 ]
	then
		echo "The group given for DBSA ( ${DBSA_GROUP} ) does not exist in /etc/group" >&2
		exit 1
	fi
	AAO_GROUP=$5
	grep "^${AAO_GROUP}:" /etc/group 1>/dev/null 2>/dev/null
	if [ $? != 0 ]
	then
		echo "The group given for AAO ( ${AAO_GROUP} ) does not exist in /etc/group" >&2
		exit 1
	fi
	DBSSO_GROUP=$6
	grep "^${DBSSO_GROUP}:" /etc/group 1>/dev/null 2>/dev/null
	if [ $? != 0 ]
	then
		echo "The group given for DBSSO ( ${DBSSO_GROUP} ) does not exist in /etc/group" >&2
		exit 1
	fi
	GROUPS_FLAG=1
	;;
*)
	usage
	exit 1
esac

case $IX_VERSION in
7)
	IX_SUB_DIRS="aaodir bin dbssodir demo etc forms gls help incl ism lib msg release snmp"
	IX_DIRS="bin demo forms gls help incl ism lib msg release snmp"
	;;
9)
	IX_SUB_DIRS="aaodir bin dbssodir demo doc etc extend forms gls help incl ism lib msg release snmp"
	IX_DIRS="bin demo doc extend forms gls help incl ism lib msg release snmp"
	;;
10|11)
	IX_SUB_DIRS="aaodir bin dbssodir demo doc etc extend forms gls help incl ism lib msg release snmp ids_license master_license"
	IX_DIRS="bin demo doc extend forms gls help incl ism lib msg release snmp ids_license master_license"
	;;
*)
	echo "Version can only be 7, 9, 10 or 11" >&2
	usage
	exit 1
	;;
esac
SO=`uname -s | tr "[:upper:]" "[:lower:]"`
case $SO in
sunos*)
        AWK=nawk
	export AWK
	GROUP_MEMBERSHIP=`id -a | ${AWK} -F'=' '{print $4}' | ${AWK} -F'[()]' '{for (f=2;f<NF;f=f+2) {printf "%s|",$f}print""}'`
        ;;
linux|*)
        AWK=awk
	export AWK
	ID_FLAGS=
	GROUP_MEMBERSHIP=`id | ${AWK} -F'=' '{print $4}' | ${AWK} -F'[()]' '{for (f=2;f<NF;f=f+2) {printf "%s|",$f}print""}'`
        ;;
esac

export AWK

MY_USER=`id | ${AWK} -F"[()]" ' { print $2 } '`



case $MY_USER in
root)
	;;
informix)
	if [ "X${GROUPS_FLAG}" = "X1" ]
	then
		WARN_FLAG=0
		for GROUP in $DBSA_GROUP $AAO_GROUP $DBSSO_GROUP
		do
			echo $GROUP_MEMBERSHIP | grep "$GROUP|" >/dev/null
			if [ $? != 0 ]
			then
				WARN_FLAG=1
			fi
		done
	fi
        ;;
*)
        echo "This utility must be run as root or informix" >&2
        exit 1
        ;;
esac


if [ ! -d $EXISTING_IXDIR ]
then
	echo "$EXISTING_IXDIR is not an existing dir!" >&2
	exit 1
else
	CURR_DIR=`pwd`
	cd $EXISTING_IXDIR
	EXISTING_IXDIR=`pwd`
	cd $CURR_DIR
fi


for dir in $IX_SUB_DIRS
do
	if [ ! -d $EXISTING_IXDIR/$dir ]
	then
		echo "$EXISTING_IXDIR/$dir does not exist!... Aborting..." >&2
#		exit 1	
	fi
done


if [ ! -w $NEW_IXDIR ]
then
	mkdir $NEW_IXDIR
	if  [ $? != 0 ]
	then
		echo "Error creating non existing new INFORMIXDIR: $NEW_IXDIR" >&2
		exit 1
	fi
	if [ $MY_USER != "informix" ]
	then
		chown informix:informix $NEW_IXDIR
	fi
	chmod 755 $NEW_IXDIR
fi

cd $NEW_IXDIR
NEW_IXDIR=`pwd`
cd $NEW_IXDIR

for dir in $IX_DIRS
do
	if [ $MY_USER != "informix" ]
	then
		su informix -c "ln -s $EXISTING_IXDIR/$dir ."
	else
		ln -s $EXISTING_IXDIR/$dir .
	fi
done

mkdir dbssodir aaodir etc
cp -pR $EXISTING_IXDIR/etc/* $NEW_IXDIR/etc
cp -pR $EXISTING_IXDIR/dbssodir/* $NEW_IXDIR/dbssodir
cp -pR $EXISTING_IXDIR/aaodir/* $NEW_IXDIR/aaodir

if [ $MY_USER != "informix" ]
then
	if [ "X${GROUPS_FLAG}" = "X0" ]
	then
		chown informix:informix $NEW_IXDIR/dbssodir
		chown informix:informix $NEW_IXDIR/etc
		chown informix:informix $NEW_IXDIR/aaodir
	fi
fi

if [ "X${GROUPS_FLAG}" = "X1" ]
then
	if [ "X${WARN_FLAG}" = "X0" ]
	then
		chown informix:${DBSSO_GROUP} $NEW_IXDIR/dbssodir
		chown informix:${DBSA_GROUP} $NEW_IXDIR/etc
		chown informix:${AAO_GROUP} $NEW_IXDIR/aaodir
	else
		echo "User does not belong to all the specified groups"
		echo "These commands will have to be run by root:"

		echo chown informix:${DBSSO_GROUP} $NEW_IXDIR/dbssodir
		echo chown informix:${DBSA_GROUP} $NEW_IXDIR/etc
		echo chown informix:${AAO_GROUP} $NEW_IXDIR/aaodir
	fi
else
	echo "Internal error: Invalid value for GROUPS_FLAG..." >&2
	exit 1
fi

chmod 770 dbssodir aaodir
chmod 775 etc

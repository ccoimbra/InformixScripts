#!/bin/sh
# Name: $RCSfile$
# CVS file: $Source$
# CVS id: $Header$
# Revision: $Revision$
# Revised on: $Date$
# Revised by: $Author$
# Support: Fernando Nunes - domusonline@gmail.com
# Licence: This script is licensed as GPL ( http://www.gnu.org/licenses/old-licenses/gpl-2.0.html )
# History:

PROGNAME=`basename $0`
NO_IGNORE_ERRORS=0
VERSION=`echo "$Revision$" | cut -f2 -d' '`

show_usage()
{
	printf "%s : [-n|-N] <sql_file> \n" ${PROGNAME} >&2
	printf "       -n : Don't ignore SQL errors in each script. Stops processing of the script on first error on each database, but continues to the next\n" >&2
	printf "       -n : Don't ignore SQL errors in each script. Stops processing of the script on first error and doesn't proceed to the next database\n" >&2
	printf "       : sql_file SQL file to run on all databases\n" >&2
}

TMP_FILE_UNL=/tmp/${PROGNAME}.unl.$$
TMP_FILE_ERR=/tmp/${PROGNAME}.err.$$
no_ignore_erros_flag=""

clean_up()
{
	rm -f ${TMP_FILE_UNL} ${TMP_FILE_ERR}
}

trap clean_up 0

get_args()
{
	arg_ok="hVnN"

	while getopts ${arg_ok} OPTION
	do
		case ${OPTION} in
		h)   # show usage
			show_usage
			exit 0
                        ;;
		V)      #show version
			echo "${PROGNAME} ${VERSION}" >&1
			exit 0
			;;
		n)
			if [ "X${no_ignore_errors_flag}" = "X1" ]
			then
				printf "-n and -N flags can be used only once\n" >&2
				return 1
			fi
			no_ignore_errors_flag=1
			NO_IGNORE_ERRORS=1
			;;
		N)
			if [ "X${no_ignore_errors_flag}" = "X1" ]
			then
				printf "-n and -N flags can be used only once\n" >&2
				return 1
			fi
			no_ignore_errors_flag=1
			NO_IGNORE_ERRORS=2
			;;
		esac
	done
	shift `expr $OPTIND - 1`

	SQL_FILE=$1
	return 0
}


get_args $*
if [ $? != 0 ]
then
        show_usage
        exit 1
fi

if [ ! -f ${SQL_FILE} ]
then
	printf "${PROGNAME}: SQL file ( %s ) does not exist\n" ${SQL_FILE} >&2
	exit 1
else
	if [ ! -r ${SQL_FILE} ]
	then
		printf "${PROGNAME}: SQL file ( %s ) cannot be read\n" ${SQL_FILE} >&2
		exit 1
	fi
fi

if [ "X${DB_LOCALE}" = "X" ]
then
	LOCALE_ORI=$DB_LOCALE
fi
dbaccess sysmaster <<!EOF 2>${TMP_FILE_ERR}
UNLOAD TO $TMP_FILE_UNL DELIMITER " "
SELECT
	dbs_dbsname,
	dbs_collate
FROM
	sysdbslocale
WHERE
	dbs_dbsname NOT IN ('sysmaster','sysutils','sysha', 'sysadmin', 'syscdr', 'sysuser' )
!EOF

if [ $? != 0 ]
then
	printf "Couldn't get the list of databases:\n" >&2
	cat ${TMP_FILE_ERR} >&2
	exit 1
fi


if [ "X${NO_IGNORE_ERRORS}" != "X0" ]
then
	export DBACCNOIGN=1
else
	unset DBACCNOIGN
fi

cat ${TMP_FILE_UNL} | while read DB LOCALE
do
	export DB_LOCALE=$LOCALE
	dbaccess $DB $SQL_FILE 2>${TMP_FILE_ERR}
	if [ $? != 0 ]
	then
		printf "-------------------------------------------------------\nDatabase: %s\n-------------------------------------------------------\n" $DB >&2
		printf "Some errors ocurred while processing database (%s)\n" $DB >&2
		cat ${TMP_FILE_ERR} >&2
		if [ "X${NO_IGNORE_ERRORS}" = "X2" ]
		then
			printf "Option -N was used. Aborting processing for the rest of the databases\n" >&2
			exit 1
		fi
	else
		printf "-------------------------------------------------------\nDatabase: %s OK!\n-------------------------------------------------------\n" $DB >&2
	fi
done

if [ "X${LOCALE_ORI}" = "XCLEAR" ]
then
	unset DB_LOCALE
else
	export DB_LOCALE=$LOCALE_ORI
fi
